$version Generated by VerilatedVcd $end
$date Mon Nov 21 13:27:06 2022 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire 32 F a0_output [31:0] $end
  $var wire 32 M aluop2_test [31:0] $end
  $var wire  1 D clk $end
  $var wire  3 O interm_aluctrl [2:0] $end
  $var wire  1 Q interm_alusrc $end
  $var wire  1 R interm_eq $end
  $var wire 32 I interm_immop [31:0] $end
  $var wire  3 P interm_immsrc [2:0] $end
  $var wire 32 L interm_ins [31:0] $end
  $var wire  1 S interm_pcsrc $end
  $var wire 32 K prog_addr [31:0] $end
  $var wire  5 J rd_add [4:0] $end
  $var wire 32 N rf_din [31:0] $end
  $var wire 32 G rf_dout1 [31:0] $end
  $var wire 32 H rf_dout2 [31:0] $end
  $var wire  1 E rst $end
  $var wire  1 T write_en $end
  $scope module cpu $end
   $var wire 32 ` WIDTH [31:0] $end
   $var wire 32 F a0_output [31:0] $end
   $var wire 32 M aluop2_test [31:0] $end
   $var wire  1 D clk $end
   $var wire  3 O interm_aluctrl [2:0] $end
   $var wire  1 Q interm_alusrc $end
   $var wire  1 R interm_eq $end
   $var wire 32 I interm_immop [31:0] $end
   $var wire  3 P interm_immsrc [2:0] $end
   $var wire 32 L interm_ins [31:0] $end
   $var wire  1 S interm_pcsrc $end
   $var wire 32 K prog_addr [31:0] $end
   $var wire  5 J rd_add [4:0] $end
   $var wire 32 N rf_din [31:0] $end
   $var wire 32 G rf_dout1 [31:0] $end
   $var wire 32 H rf_dout2 [31:0] $end
   $var wire  1 E rst $end
   $var wire  1 T write_en $end
   $scope module ALU $end
    $var wire  3 O aluctrl [2:0] $end
    $var wire 32 G aluop1 [31:0] $end
    $var wire 32 U aluop2 [31:0] $end
    $var wire 32 N aluout [31:0] $end
    $var wire  1 Q alusrc $end
    $var wire  1 R eq $end
    $var wire 32 I immop [31:0] $end
    $var wire 32 H regop2 [31:0] $end
   $upscope $end
   $scope module RF $end
    $var wire 32 F a0 [31:0] $end
    $var wire  5 V ad1 [4:0] $end
    $var wire  5 W ad2 [4:0] $end
    $var wire  5 X ad3 [4:0] $end
    $var wire  1 D clk $end
    $var wire 32 G regop1 [31:0] $end
    $var wire 32 H regop2 [31:0] $end
    $var wire  1 T regwrite $end
    $var wire 32 # rf[0] [31:0] $end
    $var wire 32 - rf[10] [31:0] $end
    $var wire 32 . rf[11] [31:0] $end
    $var wire 32 / rf[12] [31:0] $end
    $var wire 32 0 rf[13] [31:0] $end
    $var wire 32 1 rf[14] [31:0] $end
    $var wire 32 2 rf[15] [31:0] $end
    $var wire 32 3 rf[16] [31:0] $end
    $var wire 32 4 rf[17] [31:0] $end
    $var wire 32 5 rf[18] [31:0] $end
    $var wire 32 6 rf[19] [31:0] $end
    $var wire 32 $ rf[1] [31:0] $end
    $var wire 32 7 rf[20] [31:0] $end
    $var wire 32 8 rf[21] [31:0] $end
    $var wire 32 9 rf[22] [31:0] $end
    $var wire 32 : rf[23] [31:0] $end
    $var wire 32 ; rf[24] [31:0] $end
    $var wire 32 < rf[25] [31:0] $end
    $var wire 32 = rf[26] [31:0] $end
    $var wire 32 > rf[27] [31:0] $end
    $var wire 32 ? rf[28] [31:0] $end
    $var wire 32 @ rf[29] [31:0] $end
    $var wire 32 % rf[2] [31:0] $end
    $var wire 32 A rf[30] [31:0] $end
    $var wire 32 B rf[31] [31:0] $end
    $var wire 32 & rf[3] [31:0] $end
    $var wire 32 ' rf[4] [31:0] $end
    $var wire 32 ( rf[5] [31:0] $end
    $var wire 32 ) rf[6] [31:0] $end
    $var wire 32 * rf[7] [31:0] $end
    $var wire 32 + rf[8] [31:0] $end
    $var wire 32 , rf[9] [31:0] $end
    $var wire  1 a rst $end
    $var wire 32 N wd3 [31:0] $end
    $scope module unnamedblk1 $end
     $var wire 32 C j [31:0] $end
    $upscope $end
   $upscope $end
   $scope module mem_ctrl_sgnext $end
    $var wire 32 ` ADDRESS_WIDTH [31:0] $end
    $var wire 32 b DATA_WIDTH [31:0] $end
    $var wire  3 O aluctrl [2:0] $end
    $var wire  1 Q alusrc $end
    $var wire  1 R eq $end
    $var wire 32 I immop [31:0] $end
    $var wire  1 Z immsrc $end
    $var wire 32 L instr [31:0] $end
    $var wire 32 K pc [31:0] $end
    $var wire  1 Y pcsrc $end
    $var wire  1 T regwrite $end
    $scope module control_unit $end
     $var wire  3 O aluctrl [2:0] $end
     $var wire  1 Q alusrc $end
     $var wire  1 R eq $end
     $var wire  1 Z immsrc $end
     $var wire 32 L instr [31:0] $end
     $var wire  7 [ opcode [6:0] $end
     $var wire  1 Y pcsrc $end
     $var wire  1 T regwrite $end
    $upscope $end
    $scope module instr_mem $end
     $var wire 32 c ADDRESS_WIDTH [31:0] $end
     $var wire 32 b DATA_WIDTH [31:0] $end
     $var wire 32 L instr [31:0] $end
     $var wire 20 \ pc [19:0] $end
    $upscope $end
    $scope module sign_extend $end
     $var wire 32 I immop [31:0] $end
     $var wire  1 Z immsrc $end
     $var wire 32 L instr [31:0] $end
    $upscope $end
   $upscope $end
   $scope module pc_unit $end
    $var wire 32 ` WIDTH [31:0] $end
    $var wire 32 ] branch_pc [31:0] $end
    $var wire  1 D clk $end
    $var wire 32 I immop [31:0] $end
    $var wire 32 ^ inc_pc [31:0] $end
    $var wire 32 _ next_pc [31:0] $end
    $var wire 32 K pc [31:0] $end
    $var wire  1 S pcsrc $end
    $var wire  1 E rst $end
    $scope module addconstant $end
     $var wire 32 ` WIDTH [31:0] $end
     $var wire 32 d constant [31:0] $end
     $var wire 32 K in [31:0] $end
     $var wire 32 ^ out [31:0] $end
    $upscope $end
    $scope module adder $end
     $var wire 32 ` WIDTH [31:0] $end
     $var wire 32 K a [31:0] $end
     $var wire 32 I b [31:0] $end
     $var wire 32 ] sum [31:0] $end
    $upscope $end
    $scope module mux $end
     $var wire 32 ` WIDTH [31:0] $end
     $var wire 32 ^ in_0 [31:0] $end
     $var wire 32 ] in_1 [31:0] $end
     $var wire 32 _ out [31:0] $end
     $var wire  1 S sel $end
    $upscope $end
    $scope module pcreg $end
     $var wire 32 ` WIDTH [31:0] $end
     $var wire  1 D clk $end
     $var wire 32 _ in [31:0] $end
     $var wire 32 K out [31:0] $end
     $var wire  1 E rst $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
0D
0E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000 J
b00000000000000000000000000000000 K
b00000000000000000000000000000000 L
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
b000 O
b000 P
0Q
0R
0S
0T
b00000000000000000000000000000000 U
b00000 V
b00000 W
b00000 X
1Y
0Z
b0000000 [
b00000000000000000000 \
b00000000000000000000000000000000 ]
b00000000000000000000000000000100 ^
b00000000000000000000000000000100 _
b00000000000000000000000000100000 `
0a
b00000000000000000000000000001000 b
b00000000000000000000000000010100 c
b00000000000000000000000000000100 d
#1
1D
b00000000000000000000000011111111 I
b00001111111100000000001100010011 L
b00000000000000000000000011111111 N
1Q
1T
b00000000000000000000000011111111 U
b11111 W
b00110 X
0Y
b0010011 [
b00000000000000000000000011111111 ]
#2
0D
#3
b00000000000000000000000011111111 )
1D
b00000000000000000000000000000000 I
b00000000000000000000000000000100 K
b00000000000000000000010100010011 L
b00000000000000000000000000000000 N
1R
b00000000000000000000000000000000 U
b00000 W
b01010 X
b00000000000000000100 \
b00000000000000000000000000000100 ]
b00000000000000000000000000001000 ^
b00000000000000000000000000001000 _
#4
0D
#5
1D
b00000000000000000000000011110000 I
b00000000000000000000000000001000 K
b00001111000000000000010110010011 L
b00000000000000000000000011110000 N
0R
b00000000000000000000000011110000 U
b10000 W
b01011 X
b00000000000000001000 \
b00000000000000000000000011111000 ]
b00000000000000000000000000001100 ^
b00000000000000000000000000001100 _
#6
0D
#7
b00000000000000000000000011110000 .
1D
b00000000000000000000000011110000 G
b00000000000000000000000000000000 I
b01011 J
b00000000000000000000000000001100 K
b00000000000001011000010100010011 L
b00000000000000000000000000000000 U
b01011 V
b00000 W
b01010 X
b00000000000000001100 \
b00000000000000000000000000001100 ]
b00000000000000000000000000010000 ^
b00000000000000000000000000010000 _
#8
0D
#9
b00000000000000000000000011110000 -
1D
b00000000000000000000000011110000 F
b00000000000000000000000000000001 I
b00000000000000000000000000010000 K
b00000000000101011000010110010011 L
b00000000000000000000000011110001 N
b00000000000000000000000000000001 U
b00001 W
b01011 X
b00000000000000010000 \
b00000000000000000000000000010001 ]
b00000000000000000000000000010100 ^
b00000000000000000000000000010100 _
#10
0D
#11
b00000000000000000000000011110001 .
1D
b00000000000000000000000011110001 G
b00000000000000000000000011111111 H
b01111111111111111111111111111000 I
b00000000000000000000000000010100 K
b11111110011001011001100011100011 L
b00000000000000000000000000000000 N
b111 O
0Q
0T
b00000000000000000000000011111111 U
b00110 W
b10001 X
1Y
1Z
b1100011 [
b00000000000000010100 \
b10000000000000000000000000001100 ]
b00000000000000000000000000011000 ^
b00000000000000000000000000011000 _
#12
0D
#13
1D
b00000000000000000000000011111111 G
b00000000000000000000000000000000 H
b01111111111111111111111111110000 I
b00110 J
b00000000000000000000000000011000 K
b11111110000000110001000011100011 L
b00000000000000000000000000000000 U
b00110 V
b00000 W
b00001 X
b00000000000000011000 \
b10000000000000000000000000001000 ]
b00000000000000000000000000011100 ^
b00000000000000000000000000011100 _
#14
0D
#15
1D
b00000000000000000000000000000000 G
b00000000000000000000000000000000 I
b00000 J
b00000000000000000000000000011100 K
b00000000000000000000000000000000 L
b000 O
1R
b00000 V
b00000 X
0Z
b0000000 [
b00000000000000011100 \
b00000000000000000000000000011100 ]
b00000000000000000000000000100000 ^
b00000000000000000000000000100000 _
#16
0D
#17
1D
b00000000000000000000000000100000 K
b00000000000000100000 \
b00000000000000000000000000100000 ]
b00000000000000000000000000100100 ^
b00000000000000000000000000100100 _
#18
0D
#19
1D
b00000000000000000000000000100100 K
b00000000000000100100 \
b00000000000000000000000000100100 ]
b00000000000000000000000000101000 ^
b00000000000000000000000000101000 _
#20
0D
#21
1D
b00000000000000000000000000101000 K
b00000000000000101000 \
b00000000000000000000000000101000 ]
b00000000000000000000000000101100 ^
b00000000000000000000000000101100 _
#22
0D
#23
1D
b00000000000000000000000000101100 K
b00000000000000101100 \
b00000000000000000000000000101100 ]
b00000000000000000000000000110000 ^
b00000000000000000000000000110000 _
#24
0D
#25
1D
b00000000000000000000000000110000 K
b00000000000000110000 \
b00000000000000000000000000110000 ]
b00000000000000000000000000110100 ^
b00000000000000000000000000110100 _
#26
0D
#27
1D
b00000000000000000000000000110100 K
b00000000000000110100 \
b00000000000000000000000000110100 ]
b00000000000000000000000000111000 ^
b00000000000000000000000000111000 _
#28
0D
#29
1D
b00000000000000000000000000111000 K
b00000000000000111000 \
b00000000000000000000000000111000 ]
b00000000000000000000000000111100 ^
b00000000000000000000000000111100 _
#30
0D
#31
1D
b00000000000000000000000000111100 K
b00000000000000111100 \
b00000000000000000000000000111100 ]
b00000000000000000000000001000000 ^
b00000000000000000000000001000000 _
#32
0D
#33
1D
b00000000000000000000000001000000 K
b00000000000001000000 \
b00000000000000000000000001000000 ]
b00000000000000000000000001000100 ^
b00000000000000000000000001000100 _
#34
0D
#35
1D
b00000000000000000000000001000100 K
b00000000000001000100 \
b00000000000000000000000001000100 ]
b00000000000000000000000001001000 ^
b00000000000000000000000001001000 _
#36
0D
#37
1D
b00000000000000000000000001001000 K
b00000000000001001000 \
b00000000000000000000000001001000 ]
b00000000000000000000000001001100 ^
b00000000000000000000000001001100 _
#38
0D
#39
1D
b00000000000000000000000001001100 K
b00000000000001001100 \
b00000000000000000000000001001100 ]
b00000000000000000000000001010000 ^
b00000000000000000000000001010000 _
